- name: Create a Teleport server of some sort
  hosts: localhost
  connection: local
  become: false
  gather_facts: False
#  vars:
  vars_files:
  - vars/teleport_proxy.yml
  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ keypair }}"
         group_id: "{{ sg }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: "{{ subnet_id }}"
         instance_tags:
             Backup: "{{ backup }}"
             Name: "{{ instance_name }}"
         assign_public_ip: yes
         state: present
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: True
  gather_facts: True
  roles:
    - role: teleport
      vars:
          teleport_config: |
                teleport:
                  nodename: auth
                  data_dir: /var/lib/teleport
                  log:
                    output: syslog
                    severity: INFO
                  storage:
                    type: dynamodb
                    region: us-east-1
                    table_name: teleport.state
                    access_key: AKIAJQJU3BIFC44Z7MGA 
                    secret_key: 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
                  advertise_ip: 10.127.248.24  
                  auth_token: hello
                auth_service:
                  cluster_name: tele-test
                  enabled: "yes"
                  listen_addr: 0.0.0.0:3025
                  tokens:
                    - "proxy,node:hello"
                  authentication:
                    type: local
                    second_factor: off
                ssh_service:
                  enabled: "no"
                proxy_service:
                  enabled: "no"

