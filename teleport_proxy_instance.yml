---
- name: Create a Teleport SSH auth server instance
  hosts: localhost
  connection: local
  gather_facts: False
  become: False
  vars:
    key_name: 
    instance_type: 
    sg: 
    image: 
    region: 
    instance_name: 
    app: nothing
    backup: true 
    auth_servers: ""
    poc: someone
    start_stop: 1
    iam_profile: 
    env: dev

  tasks:
    - name: Launch instance
      ec2:
         key_name: "{{ key_name }}"
         group_id: "{{ sg }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
         vpc_subnet_id: 
         assign_public_ip: yes
         instance_profile_name: "{{ iam_profile }}"
         instance_tags:
             Backup: "{{ backup }}"
             POC: "{{ poc }}"
             Environment: "{{ env }}"
             Name: "{{ instance_name }}"
             Team: "{{ app }}"  
             ec2startstop: "{{ start_stop }}"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 60
        timeout: 300
        state: started
      with_items: "{{ ec2.instances }}"

- name: Configure instance(s)
  hosts: launched
  become: True
  gather_facts: True
  roles:
  - role: teleport 
    vars: 
    - auth_servers: ["0.0.0.0"]
    - teleport_config: |
        teleport:
          nodename: "{{ ansible_hostname }}"
          auth_token: hello
          auth_servers:
          - "{{ auth_servers}}"
          data_dir: /var/lib/teleport
          log:
              output: syslog
              severity: INFO
        proxy_service:
          enabled: "yes"
          listen_addr: 0.0.0.0:3023
          web_listen_addr: 0.0.0.0:3080
        auth_service:
          enabled: "no"
        ssh_service:
          enabled: "no"

- name: Register instance with AWS System Manager
  hosts: launched
  become: True
  gather_facts: True
  roles:
  - role: aws_ssm

- name: Announce new host deployment
  hosts: rc01
  roles:
   - role: ansible_rc_alert
     vars:
     - instance_name: 
     - message: "Finished deploying {{ instance_name }}"
